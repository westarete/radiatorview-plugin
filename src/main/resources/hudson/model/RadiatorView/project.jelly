
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
	xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
	xmlns:i="jelly:fmt">
	<!--  Display details about a single project in the radiator -->

	<!-- show in a different style if the job is building or queued.  -->
	<j:set var="clazz" value="normal" />

	<div style="${jobStyle}  background-color:${job.backgroundColor};"
		class="${clazz}" tooltip="${job.name}" id="job">

		<!--  Job Name Title -->
		<p>
			<a style="color: ${job.color}; font-size: ${jobFont}; font-weight:bold;"
				href="${job.url}">${job.name}</a>
		</p>
		<!-- Details of any test failures -->
		<!--
			Removed - not accurately reporting aggregator modules that do
			incremental builds. <p> <j:if test="${job.broken == false &amp;&amp;
			job.testCount > 0}"> <j:if test="${job.failCount == 1}"> <font
			style="text-align=center; color: #FF0000;">1/${job.testCount} test
			failure</font> </j:if> <j:if test="${job.failCount == 0}"> <font
			style="text-align=center; color: black;">${job.testCount} successful
			tests</font> </j:if> <j:if test="${ job.failCount > 1}"> <font
			style="text-align=center; color:
			#FF0000;">${job.failCount}/${job.testCount} test failures </font>
			</j:if> </j:if> </p>
		-->
		<j:invoke var="passJobs" on="${job}" method="getPassingJobs" />
		<j:invoke var="failJobs" on="${job}" method="getFailingJobs" />
		<j:invoke var="claimedJobs" on="${job}" method="getClaimedBuilds" />
		<j:if test="${!failJobs.isEmpty()}">
			<j:if
				test="${job.getCulprit() != null &amp;&amp; !job.getCulprit().equals(&quot;&quot;) &amp;&amp; job.getCulprit() != &quot; - &quot;}">
				<p>Possible Culprits: ${job.culprit}</p>
			</j:if>
			<p>
				Failures:
				<j:forEach var="subjob" items="${failJobs}">
					<j:invokeStatic className="org.apache.commons.lang.StringUtils"
						method="removeStart" var="subjobShortName">
						<j:arg type="java.lang.String" value="${subjob.name}" />
						<j:arg type="java.lang.String" value="${job.name}_" />
					</j:invokeStatic>
					<a href="${subjob.url}">${subjobShortName}</a>
					<j:if test="${subjob.getBuilding()}">(building now)</j:if>
					<j:if test="${subjob.getQueued()}">(build pending)</j:if>
					;
				</j:forEach>
			</p>
		</j:if>
		<j:if test="${!claimedJobs.isEmpty()}">
			<p>
				Claimed Failures:
				<j:forEach var="subjob" items="${claimedJobs}">
					<j:invokeStatic className="org.apache.commons.lang.StringUtils"
						method="removeStart" var="subjobShortName">
						<j:arg type="java.lang.String" value="${subjob.name}" />
						<j:arg type="java.lang.String" value="${job.name}_" />
					</j:invokeStatic>
					<a href="${subjob.url}">${subjobShortName}</a>
					<j:if test="${subjob.getBuilding()}">(building now)</j:if>
					<j:if test="${subjob.getQueued()}">(build pending)</j:if>
					;
				</j:forEach>
			</p>
		</j:if>
	</div>

</j:jelly>
