<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
	xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
	xmlns:i="jelly:fmt">
	<meta http-equiv="refresh" content="${from.refresh}" />
	<style type="text/css">
		#header{
		display:none;
		}
		#side-panel{
		display:none;
		}
		#view-message{
		display:none;
		}
		#main-panel{
		padding: 0px;
		}
	</style>

	<j:choose>
		<j:when test="${empty(items)}">
			<st:include page="noJob.jelly" />

		</j:when>
		<j:otherwise>
			<t:setIconSize />

			<j:set var="dashStyle"
				value="overflow: visible; left: 0px; top: 0px; position: absolute; height: 100%; z-index: 9999; width: 100%; background-color: white; background-image: url(${rootURL}/static/0360aadc/images/hudson.png); background-repeat: no-repeat; background-position: left bottom;" />
			<j:if test="${from.getHighVis()}">
				<j:set var="dashStyle"
					value="overflow: visible; left: 0px; top: 0px; position: absolute; height: 100%; z-index: 9999; width: 100%; background-color: black;" />
			</j:if>
			<div class="dashboard" style="${dashStyle}">
				<j:if test="${!empty(items)}">
					<!-- project list -->
					<j:invoke var="failJobs" on="${from}" method="sortFailing">
						<j:arg type="java.util.Collection" value="${items}" />
					</j:invoke>
					<j:invoke var="passJobs" on="${from}" method="sortPassing">
						<j:arg type="java.util.Collection" value="${items}" />
					</j:invoke>

					<j:set var="passHeight" value="100" />
					<j:if test="${! failJobs.isEmpty()}">

						<j:invoke var="failJobRows" on="${from}" method="toRows">
							<j:arg type="java.util.Collection" value="${failJobs}" />
							<j:arg type="java.lang.Boolean" value="true" />
						</j:invoke>

						<j:set var="jobFont" value="xx-large" />
						<j:set var="failFont" value="xx-large" />
						<j:set var="infoFont" value="medium" />
						<j:set var="buildFont" value="medium" />
            <j:set var="iconSize" value="48x48" />

            <j:if test="${from.getShowStableDetail()}">
              <j:set var="height" value="66%" />
            </j:if>
            <j:if test="${!from.getShowStableDetail()}">
              <j:set var="height" value="85%" />
            </j:if>

						<j:if test="${!from.getShowStable()}">
							<j:set var="height" value="100%" />
						</j:if>

						<table width="100%" height="${height}"
							style="border: 10px; table-layout: fixed;" cellspacing="10">
							<j:forEach var="row" items="${failJobRows}">
								<tr>
									<j:forEach var="job" items="${row}">
										<st:include page="job.jelly" />
									</j:forEach>
								</tr>
							</j:forEach>
						</table>
            <j:if test="${from.getShowStableDetail()}">
              <j:set var="passHeight" value="33" />
            </j:if>
            <j:if test="${!from.getShowStableDetail()}">
              <j:set var="passHeight" value="14" />
            </j:if>
					</j:if>

					<!--
						optionally show stable jobs if requested or there are none
						failing.
					-->
					<j:if test="${from.getShowStable() || failJobs.isEmpty()}">
						<j:invoke var="passJobRows" on="${from}" method="toRows">
							<j:arg type="java.util.Collection" value="${passJobs}" />
							<j:arg type="java.lang.Boolean" value="false" />
						</j:invoke>

						<j:set var="jobFont" value="x-small" />
						<j:set var="infoFont" value="xx-small" />
						<j:set var="buildFont" value="xx-small" />
            <j:set var="iconSize" value="16x16" />

						<table width="100%" height="${passHeight}%" style="table-layout: fixed;" cellspacing="5">
							<j:forEach var="row" items="${passJobRows}">
								<tr>
									<j:forEach var="job" items="${row}">
										<j:if test="${from.getShowStableDetail()}">
											<st:include page="job.jelly" />
										</j:if>
										<j:if test="${!from.getShowStableDetail()}">
											<st:include page="passJob.jelly" />
										</j:if>
									</j:forEach>
								</tr>
							</j:forEach>
						</table>
					</j:if>
				</j:if>
			</div>
		</j:otherwise>
	</j:choose>
	<script type="text/javascript">
		$$('.building').each(function(e) {
		var fadeIn = new
		YAHOO.util.Anim(e, {
		opacity: {from: 0.5, to: 0.9},
		'-moz-opacity':
		{from: 0.5, to: 0.9},
		'-webkit-opacity': {from: 0.5, to: 0.9}
		});
		var
		fadeOut = new YAHOO.util.Anim(e, {
		opacity: {from: 0.9, to: 0.5},
		'-moz-opacity': {from: 0.9, to: 0.5},
		'-webkit-opacity': {from: 0.9,
		to: 0.5}
		});
		fadeIn.onComplete.subscribe(function() {
		fadeOut.animate();
		});
		fadeOut.onComplete.subscribe(function() {
		fadeIn.animate();
		});
		fadeIn.animate();
		});
  </script>
</j:jelly>
